{"version":3,"sources":["app.jsx","index.js"],"names":["Welcome","lazy","Form","Confirmation","Endscreen","App","useState","component","setComponent","favorit","setFavorit","nominators","setNominators","stateNom","useEffect","axios","get","then","res","data","console","log","handleClickConfirmation","yesOrNo","className","fallback","handleClick","fav","handleClickForm","dataNominators","next","back","ReactDOM","render","document","getElementById"],"mappings":"qNASMA,EAAUC,gBAAK,kBAAM,4BAAN,IACfC,EAAOD,gBAAK,kBAAM,4BAAN,IACZE,EAAeF,gBAAK,kBAAM,4BAAN,IACpBG,EAAYH,gBAAK,kBAAM,4BAAN,IAoDRI,EAhDH,WAEX,MAAkCC,mBAAS,WAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEA,EAAoCJ,mBAAS,MAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAgCN,mBAAS,SAAzC,mBAAOO,EAAP,UAEAC,qBAAU,WACRC,IAAMC,IAAN,+CACIC,MAAK,SAAAC,GACTN,EAAcM,EAAIC,MAClBC,QAAQC,IAAIH,EAAIC,KACZ,GACL,GAAE,CAACN,IAGJ,IAUMS,EAA0B,SAACC,GAE/Bf,EADEe,EACW,YAEA,OAEd,EAGD,OACC,qBAAKC,UAAU,YAAf,SACC,eAAC,WAAD,CAAUC,SAAU,mBAAGD,UAAU,cAAjC,UACgB,YAAdjB,EAA0B,cAACP,EAAD,CAAS0B,YAtBX,WAC3BlB,EAAa,OACb,IAoB8E,KAD7E,SAEiB,SAAdD,EAAuB,cAACL,EAAD,CAAMwB,YAAe,SAACC,GAAD,OAlBzB,SAACA,GACxBjB,EAAWiB,GACXnB,EAAa,eACb,CAeyDoB,CAAgBD,EAAzB,EAA+BA,IAAKlB,IAAc,KACjF,iBAAdF,EAA+B,cAACJ,EAAD,CAAcwB,IAAKlB,EAASoB,eAAgBlB,EAAYmB,KAAM,kBAAMR,GAAwB,EAA9B,EAAqCS,KAAM,kBAAMT,GAAwB,EAA9B,IAA2C,KACrK,cAAdf,EAA4B,cAACH,EAAD,IAAgB,SAIhD,ECvDD4B,IAASC,OACL,8BAAK,cAAC,EAAD,MACPC,SAASC,eAAe,Q","file":"static/js/main.717bc116.chunk.js","sourcesContent":["import React, {useState, useEffect, lazy, Suspense} from 'react';\r\nimport axios from 'axios';\r\n// import Welcome from './component/welcome';\r\n// import Jenjang from './component/jenjang';\r\n// import Kelas from './component/kelas';\r\n// import Form from './component/form';\r\n// import Confirmation from './component/confirmation';\r\n// import Endscreen from './component/endscreen';\r\n\r\nconst Welcome = lazy(() => import('./component/welcome'));\r\nconst Form = lazy(() => import('./component/form'))\r\nconst Confirmation = lazy(() => import('./component/confirmation'))\r\nconst Endscreen = lazy(() => import('./component/endscreen'))\r\nconst Result = lazy(() => import('./component/result'))\r\n\r\n\r\nconst App = () => {\r\n\r\n\tconst [component, setComponent] = useState('welcome');\r\n\tconst [favorit, setFavorit] = useState(null);\r\n\r\n\tconst [nominators, setNominators] = useState(null);\r\n\tconst [stateNom, setStateNom] = useState('FIXED');\r\n\r\n\tuseEffect(() => {\r\n\t  axios.get(`https://form-staff.cyclic.app/allNominators`)\r\n      .then(res => {\r\n\t\t\tsetNominators(res.data);\r\n\t\t\tconsole.log(res.data);\r\n      })\r\n\t}, [stateNom])\r\n\t\r\n\r\n\tconst handleClickWelcome  = () => {\r\n\t\tsetComponent('form');\r\n\t}\r\n\r\n\r\n\tconst handleClickForm = (fav) => {\r\n\t\tsetFavorit(fav);\r\n\t\tsetComponent('confirmation');\r\n\t}\r\n\r\n\tconst handleClickConfirmation = (yesOrNo) => {\r\n\t\tif(yesOrNo) {\r\n\t\t\tsetComponent('endscreen')\r\n\t\t} else {\r\n\t\t\tsetComponent('form')\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"component\">\r\n\t\t\t<Suspense fallback={<p className=\"component\"></p>}>\r\n\t\t\t\t{component === 'welcome' ? <Welcome handleClick = {handleClickWelcome} /> : null}\r\n\\\t\t\t\t{component === 'form' ? <Form handleClick = {(fav) => handleClickForm(fav)} fav={favorit} /> : null}\r\n\t\t\t\t{component === 'confirmation' ? <Confirmation fav={favorit} dataNominators={nominators} next={() => handleClickConfirmation(true)} back={() => handleClickConfirmation(false)} /> : null}\r\n\t\t\t\t{component === 'endscreen' ? <Endscreen /> : null}\r\n\t\t\t</Suspense>\r\n\t\t</div>\r\n\t  )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import ResultPage from './ResultPage';\nimport App from './app';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <div><App /></div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}